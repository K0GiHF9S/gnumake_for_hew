ifeq ($(and $(SHC_INC),$(SHC_LIB),$(SHC_TMP)),)
$(error SHC_INC, SHC_LIB and SHC_TMP must be set.)
endif

PYTHON ?= py -3
SCRIPT := $(dir $(lastword $(MAKEFILE_LIST)))hwp2makefile.py

$(LNK_SUBCOMMAND) : $(SCRIPT) $(PROJECT)
$(APPEND_MAKE) : $(LNK_SUBCOMMAND) $(SCRIPT) $(PROJECT)
	$(PYTHON) $(SCRIPT) $(PROJECT) $(CONFIG)

include $(APPEND_MAKE)

CC := shc.exe -lang=c
CXX := shc.exe -lang=cpp
AS := asmsh.exe
AR := lbgsh.exe
LD := optlnk.exe

NULL  :=
SPACE := $(NULL) $(NULL)
COMMA := ,

CFLAGS = $(CPPFLAGS)
CXXFLAGS = $(CPPFLAGS)

CPPFLAGS :=
CPPFLAGS += -cpu=sh4a
CPPFLAGS += -endian=little
CPPFLAGS += -debug
CPPFLAGS += -show=source,include,expansion,tab=4
CPPFLAGS += -gbr=auto
CPPFLAGS += -global_volatile=0
CPPFLAGS += -opt_range=all
CPPFLAGS += -infinite_loop=0
CPPFLAGS += -del_vacant_loop=0
CPPFLAGS += -struct_alloc=1
CPPFLAGS += -nologo
ifneq ($(INCLUDE),)
CPPFLAGS += -include=$(subst $(SPACE),$(COMMA),$(strip $(INCLUDE)))
endif
ifneq ($(DEFINE),)
CPPFLAGS += -define=$(subst $(SPACE),$(COMMA),$(strip $(DEFINE)))
endif
ifdef is_debug
CPPFLAGS += -optimize=0
endif

ASFLAGS :=
ASFLAGS += -cpu=sh4a
ASFLAGS += -endian=little
ASFLAGS += -round=zero
ASFLAGS += -denormalize=off
ASFLAGS += -debug
ASFLAGS += -literal=pool,branch,jump,return
ASFLAGS += -nolist
ASFLAGS += -nologo
ASFLAGS += -chgincpath

OBJ_C := $(patsubst %.c,$(OBJ_DIR)/%.obj,$(notdir $(C_SRC)))
OBJ_CXX := $(patsubst %.cpp,$(OBJ_DIR)/%.obj,$(notdir $(CXX_SRC)))
OBJ_AS := $(patsubst %.src,$(OBJ_DIR)/%.obj,$(notdir $(AS_SRC)))
OBJS := $(OBJ_C) $(OBJ_CXX) $(OBJ_AS)

$(OBJ_AS) : $(OBJ_DIR)/%.obj : %.src $(APPEND_MAKE)
	$(AS) $(ASFLAGS) -object=$@ $<

$(OBJ_C) : $(OBJ_DIR)/%.obj : %.c $(APPEND_MAKE)
	$(CC) $(CFLAGS) -object=$@ -listfile=$(patsubst %.obj,%.lst,$@) $<

$(OBJ_CXX) : $(OBJ_DIR)/%.obj : %.cpp $(APPEND_MAKE)
	$(CXX) $(CXXFLAGS) -object=$@ -listfile=$(patsubst %.obj,%.lpp,$@) $<

